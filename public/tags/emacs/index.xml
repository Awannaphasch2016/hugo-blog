<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>emacs on Anak Wannaphaschaiyong</title>
    <link>https://awannaphasch2016.github.io/tags/emacs/</link>
    <description>Recent content in emacs on Anak Wannaphaschaiyong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://awannaphasch2016.github.io/tags/emacs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>  A Note On X Where X = &#34;Emac&#39;s Combobulate Package&#34;
  </title>
      <link>https://awannaphasch2016.github.io/posts/a-note-on-x-where-x-emacs-combobulate-package/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awannaphasch2016.github.io/posts/a-note-on-x-where-x-emacs-combobulate-package/</guid>
      <description>Lets inspect combobulate-navigate-previous by step into the function.
The following functions are called in order:
 combobulate-navigate-previous combobulate--move-point-to-node responsible for display and move node. (combobulate--navigate &#39;previous) pass previuos to combobulate--navigate combobulate--nav-get-prev-sibling get sibling node by query its parents node and get all of its nodes. sibling nodes are arrange in order, so getting previous or next siblings nodes is easy. combobulate--nav-get-sibling-nodes outputs list of nodes seq filter check for matched node.</description>
    </item>
    
    <item>
      <title>  A Note On X Where X = &#34;Making Evil Mode Not Awkward With Zsh Completion In Doom Emacs Vterm&#34;
  </title>
      <link>https://awannaphasch2016.github.io/posts/a-note-on-x-where-x-making-evil-mode-not-awkward-with-zsh-completion-in-doom-emacs-vterm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awannaphasch2016.github.io/posts/a-note-on-x-where-x-making-evil-mode-not-awkward-with-zsh-completion-in-doom-emacs-vterm/</guid>
      <description>Set pt value to pos fix awkward completion behavior in vterm.
(defun vterm-goto-char (pos) &amp;#34;Set point to POSITION for vterm. The return value is `t&amp;#39;when point moved successfully. It will reset to original position if it can&amp;#39;t move there.&amp;#34; (when (and vterm--term (vterm-cursor-in-command-buffer-p) (vterm-cursor-in-command-buffer-p pos)) (let ((moved t) (origin-point (point)) pt cursor-pos succ) (vterm-reset-cursor-point) ;; Anak: this line cause weird behavior with auto completion (setq cursor-pos (point)) ;; (setq pt cursor-pos) ;; Anak commented out this line (setq pt pos) ;; Anak added this line and completion in vterm works better.</description>
    </item>
    
    <item>
      <title>Building fundamental in Emacs: How to customize key binding in vanilla Emacs?</title>
      <link>https://awannaphasch2016.github.io/posts/building-fundamental-in-emacs-how-to-customize-key-binding-in-vanilla-emacs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awannaphasch2016.github.io/posts/building-fundamental-in-emacs-how-to-customize-key-binding-in-vanilla-emacs/</guid>
      <description>When I first get into Emacs, I was a vim user before, so I picked up Doom Emacs without experience with vanilla Emacs. Transition has been smooth so far, but because I never has experience with Vanilla Emacs before when I encounter a bug in Doom Emacs. I always have to first figure out if it is Doom Emacs problem or Emacs problems. Because of this, I put out a new blog series to help me build a stronger foundation of Vanilla Emacs.</description>
    </item>
    
    <item>
      <title>Emacs&#39;s Snippet Management Packages Still Use Text-Based Management? Just Use Sqlite!</title>
      <link>https://awannaphasch2016.github.io/posts/emacss-snippet-management-packages-still-use-text-based-management-just-use-sqlite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awannaphasch2016.github.io/posts/emacss-snippet-management-packages-still-use-text-based-management-just-use-sqlite/</guid>
      <description>By now, in &amp;lt;2022-12-08 Thu&amp;gt;, it should be conclusive that any type of contents are best organized/managed using database. Responsibilities of database includes retrieve/store data. That&amp;rsquo;s it.
However, emacs manages data as text. Advantages of this is simplicity, but, this argument doesn&amp;rsquo;t even work anymore. why? Emacs supports SQLite as built-in!
I like Emacs because of level of compatibility that it provides, but it frustrates me to realized that open source community is not as collaborative, as a result, Emacs slow to adopts.</description>
    </item>
    
    <item>
      <title>Error log: Error in private config: config.el, (error pdf-info-epdfinfo-program is not executable) and Dependcies conflicts while installing pdf-tools via pdf-tools-install.</title>
      <link>https://awannaphasch2016.github.io/posts/dependcies-conflicts-while-installing-pdf-tools-via-pdf-tools-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awannaphasch2016.github.io/posts/dependcies-conflicts-while-installing-pdf-tools-via-pdf-tools-install/</guid>
      <description>Current Solution as of &amp;lt;2022-03-02 Wed&amp;gt;. The solution only works on doom emacs only, I found that pdf-tools must be install with init.el.
I had (package! pdf-tools) and :tools pdf. Dependencies conflict is caused by endable pdf-tools two different ways as shown.
I solved the problem by remove (package! pdf-tools) from packages.el and only keep :tools pdf.
Abit of backstory, I first encounter the problem at a very early stage of using doom emacs (first 2 weeks.</description>
    </item>
    
    <item>
      <title>How to setup a python file to activate specific conda environment using Emacs&#39;s conda.el?</title>
      <link>https://awannaphasch2016.github.io/posts/how-to-setup-a-python-file-to-activate-specific-conda-environment-using-emacss-conda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awannaphasch2016.github.io/posts/how-to-setup-a-python-file-to-activate-specific-conda-environment-using-emacss-conda/</guid>
      <description>I found that default setup for conda.el to be annoying and not robust. Firstly, setting (conda-env-autoactivate-mode t) will output error everytime file. Apparently, from inspecting the code, this is how it is implemented! see below.
(if conda-env-autoactivate-mode ;; already on, now switching off (advice-add &amp;#39;switch-to-buffer :after #&amp;#39;conda--switch-buffer-auto-activate) (advice-remove &amp;#39;switch-to-buffer #&amp;#39;conda--switch-buffer-auto-activate)) The error is (error &amp;quot;No such conda environment: %s&amp;quot; name) because input argument name has nil value when a file that is switched to don&amp;rsquo;t have environment.</description>
    </item>
    
    <item>
      <title>How to solve hanging tramps?</title>
      <link>https://awannaphasch2016.github.io/posts/how-to-solve-handing-tramp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awannaphasch2016.github.io/posts/how-to-solve-handing-tramp/</guid>
      <description>Note that information I describe here can be found at FAQ page of TRAMP user manual, see here.
From an hour of digging, I discovered that tramp is really specific in term of how it read terminal prompt (aka PS1 environment variable.). It also limited in types of terminal, specified by TERM environment variables. TERM must match tramp terminal default setting (tramp-terminal-type).
I am using zsh shell in my remote compute.</description>
    </item>
    
    <item>
      <title>Markdown Note</title>
      <link>https://awannaphasch2016.github.io/posts/markdown-note/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awannaphasch2016.github.io/posts/markdown-note/</guid>
      <description>Blog blog X implementation where X = &amp;ldquo;markdown-preview&amp;rdquo; in Emacs implementation markdown-preview pass HTML file to browse-url browse-url has the following algorithm
 prepare argument to use with specify url check for &amp;ldquo;url handle&amp;rdquo; (which is prefix to url e.g. file:) expand file name according to &amp;ldquo;url handle&amp;rdquo; find suitable function to browse url setup environment variable for display e.g. DISPLAY and WAYLAND_DISPLAY apply function with argument  </description>
    </item>
    
    <item>
      <title>Most Efficient Workflow To &#34;Lookup&#34; Documentations On Programming Language.</title>
      <link>https://awannaphasch2016.github.io/posts/most-efficient-workflow-to-lookup-documentations-on-programming-language/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awannaphasch2016.github.io/posts/most-efficient-workflow-to-lookup-documentations-on-programming-language/</guid>
      <description>The normal workflow of lookup documentation would be to search google, stack-overflow, etc. Alternatively, if you are using IDE, IDE will lookup documentation for you, for example goto-definition etc. Very convenience. What else do you need?
Although, searching online directly is not the best approach, it is everyone last line of defense. On the other hands, IDE is as good as it gets. However, the problem with IDE is that it is context specific.</description>
    </item>
    
  </channel>
</rss>