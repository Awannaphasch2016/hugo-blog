<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>debug on Anak Wannaphaschaiyong</title>
    <link>https://awannaphasch2016.github.io/tags/debug/</link>
    <description>Recent content in debug on Anak Wannaphaschaiyong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://awannaphasch2016.github.io/tags/debug/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>  A Note Of X Where X = &#34;Debugging Org&#39;s Overwritten Variables&#34;
  </title>
      <link>https://awannaphasch2016.github.io/posts/a-note-of-x-where-x-debugging-orgs-overwritten-variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awannaphasch2016.github.io/posts/a-note-of-x-where-x-debugging-orgs-overwritten-variables/</guid>
      <description>To debug org related bug, org-reload reloads all lisp files in ~/.emacs.d/.local/straight/repos/org/. Reloading config.el files should inform you what information has been overwritten. If you use Doom Emacs and modify either package.el or init.el, you must run doom sync in your terminal (outside of emacs), then consequently run doom/reload inside Doom Emacs for modification to correctly take effect.
It is important to note that you should always make sure to set custom-variables &amp;mdash; variables declared by defcustom &amp;mdash; using custom-set-variables.</description>
    </item>
    
    <item>
      <title>Getting source code of distributed binary package in Ubuntu</title>
      <link>https://awannaphasch2016.github.io/posts/getting-source-code-of-distributed-binary-package-in-ubuntu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awannaphasch2016.github.io/posts/getting-source-code-of-distributed-binary-package-in-ubuntu/</guid>
      <description>This stack exchange post state the following.
Debian and RPM packages don&amp;#39;t contain source code, only the compiled result. However, you can fetch the source packages - SRPMS, or the Debian description, patch, and original tarball. That&amp;rsquo;s it. You can only download file that are provided in url where target deb file is located. Which files will be provided? Only package maintainers can determine that. Therefore, there could be a scenario where no source codes are available for download.</description>
    </item>
    
  </channel>
</rss>